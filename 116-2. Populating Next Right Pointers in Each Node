/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() {}

    Node(int _val, Node* _left, Node* _right, Node* _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/
class Solution {
public:
    Node* connect(Node* root) {
        //start point to the 1st element of the level
        Node* start;
        if(!root) return NULL;
        
        // current visted node.
        Node* cur;
        
        start = root;
        while(start->left) {
            cur = start;
            while(cur){
                if(cur->left)
                    cur->left->next = cur->right;
                if(cur->next)
                    cur->right->next=cur->next->left;
                    
                cur = cur->next;
            }
            start = start->left;
        }
        return root;
    }
};

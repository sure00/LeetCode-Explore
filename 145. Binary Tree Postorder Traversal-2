/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        TreeNode * cur=root;
        stack<struct TreeNode*> mystack;
        vector<int> ret;
        TreeNode *lastpop;
        
        if(!root)
            return {};
        
        while(cur || !mystack.empty()){
            while(cur){
                mystack.push(cur);
                cur=cur->left;
            }
            TreeNode *tmp = mystack.top();
            
            if(!tmp->right || tmp->right == lastpop){
                ret.push_back(tmp->val);
                mystack.pop();
                lastpop =tmp;
            }
            else if(tmp->right && tmp->right != lastpop){
                cur = tmp->right;
            }
        }
        
        return ret;
    }
};
